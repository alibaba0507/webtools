{
  "search":[
      {
       "keyword":"\S+@\S+",
       "descr":"extract all emails that have @ betwwen characters and start with space and end with space",
       "example":" Comming soon ..."
     },
      {
       "keyword":"^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$",
       "descr":"extact all valid emails from text, also can be used to check a list of emails for vlaid ones",
       "example":"import java.util.regex.Matcher;
                    import java.util.regex.Pattern;
public class EmailValidator {

	private Pattern pattern;
	private Matcher matcher;

	private static final String EMAIL_PATTERN = 
		\"^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@\"
		+ \"[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$\";

	public EmailValidator() {
		pattern = Pattern.compile(EMAIL_PATTERN);
	}

	/**
	 * Validate hex with regular expression
	 * 
	 * @param hex
	 *            hex for validation
	 * @return true valid hex, false invalid hex
	 */
	public boolean validate(final String hex) {

		matcher = pattern.matcher(hex);
		return matcher.matches();

	}
}"
     }
  ]
}